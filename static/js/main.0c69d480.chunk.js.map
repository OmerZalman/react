{"version":3,"sources":["components/context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","style","cursor","float","color","onClick","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","Header","branding","href","About","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c69d480.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      };\r\n\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action =>\r\n      this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios\r\n      .get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../components/context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\n    };\n\n    render() {\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n\n                        <div className=\"card card-body mb-3 bg-light\">\n                            <h5>Name:</h5>\n                            <div>{name}\n                                <div>\n                                    <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} onClick={this.onDeleteClick.bind(this, id, dispatch)}>\n                                    </i>\n                                </div>\n                                <div>\n                                    <Link to={`contact/edit/${id}`}>\n                                        <i\n                                            className=\"fas fa-pencil-alt\"\n                                            style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '0.5rem' }} ></i>\n                                    </Link>\n                                </div>\n                                <div onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\n                                    style={{ cursor: 'pointer' }} >\n                                    <b className=\"text-default\">\n                                        {showContactInfo ? <span className=\"text-secondary\">Show Less</span> : 'Show More'}\n                                        {showContactInfo ? <i className=\"fas fa-sort-up text-secondary\"></i> : <i className=\"fas fa-sort-down\"></i>}\n                                    </b>\n                                </div>\n                            </div>\n\n                            {\n                                showContactInfo ? (<ul className=\"list-group\">\n                                    <li className=\"list-group-item\"><h5 className=\"font-weight-bold\">Email:</h5>\n                                        <p>{email}</p></li>\n\n                                    <li className=\"list-group-item bg-light\"><h5 className=\"font-weight-bold \">Phone:</h5>\n                                        <p>{phone}</p></li>\n                                </ul>) : null\n                            }\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n};\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../components/context';\r\n\r\nclass Contacts extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">\r\n                  Contact </span> List\r\n                \r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }\r\n        }\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <b><label htmlFor={name}>{label}:</label></b>\r\n      <input type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error &&\r\n        <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../components/context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n\r\n    //check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is reuired' } })\r\n      return;\r\n    };\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is reuired' } })\r\n      return;\r\n    };\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is reuired' } })\r\n      return;\r\n    };\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios\r\n      .post(\r\n        'https://jsonplaceholder.typicode.com/users',\r\n        newContact);\r\n\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: res.data\r\n    })\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({\r\n    [e.target.name]:\r\n      e.target.value\r\n  });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n\r\n            <div className=\"card mb-3\">\r\n              <div className=\"bg-light text-primary card-header text-center\">\r\n                <b>\r\n                  Add Contact\r\n                </b>\r\n              </div>\r\n              <div className=\"card-body\">\r\n\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter your Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"phone\"\r\n                    name=\"phone\"\r\n                    type=\"phone\"\r\n                    placeholder=\"Enter your Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../components/context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    })\r\n\r\n  }\r\n\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n\r\n    //check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is reuired' } })\r\n      return;\r\n    };\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is reuired' } })\r\n      return;\r\n    };\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is reuired' } })\r\n      return;\r\n    };\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({\r\n    [e.target.name]:\r\n      e.target.value\r\n  });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n\r\n            <div className=\"card mb-3\">\r\n              <div className=\"bg-light text-primary card-header text-center\">\r\n                <b>\r\n                  Edit Contact\r\n                </b>\r\n              </div>\r\n              <div className=\"card-body\">\r\n\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter your Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"phone\"\r\n                    name=\"phone\"\r\n                    type=\"phone\"\r\n                    placeholder=\"Enter your Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default EditContact;","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      })\r\n  }\r\n  /*\r\n  componentWillMount() {\r\n    console.log('component Will mount')\r\n  }\r\n  componentDidUpdate() {\r\n    console.log('component did update')\r\n  }\r\n  componentWillUpdate() {\r\n    console.log('component will update')\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    console.log('component Will Receive Props')\r\n  }\r\n  static UNSAFE_getDerivedStateFromProps(nextProps, nextState) {\r\n    return {\r\n      test: 'something'\r\n    };\r\n  }\r\n  UNSAFE_getSnapshotBeforeUpdate(prevProps, prevState) {\r\n\r\n    console.log('get Snapshot Before Update')\r\n  }\r\n  */\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <div>\r\n\r\n      <nav className=\"navbar navbar-expand-sm bg-dark mb-3 w-100 p-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand text-danger\">{branding}</a>\r\n        </div>\r\n\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link text-light\">\r\n                <i className=\"fas fa-home\"></i>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link text-light\">\r\n                <i className=\"fas fa-plus\"></i>\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link text-light\">\r\n                <i className=\"fas fa-question\"></i>\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n      </nav>\r\n    </div >\r\n  )\r\n}\r\n\r\n/* Default Prop Value*/\r\nHeader.defaultProps = {\r\n  branding: ''\r\n};\r\n\r\n/* Type Checking */\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4 text-danger\">About <span className=\"text-secondary\"> Contact </span> List</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"> <span className=\"text-danger\"> 404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not seen to exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts.js';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Test from './components/test/Test';\n\n//Layouts\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound.js';\n\n//Contact Context\nimport { Provider } from './components/context';\n\n//Bootstrap And Css Here!\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Cards\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider >\n    );\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}